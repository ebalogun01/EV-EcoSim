Search.setIndex({"docnames": ["analysis", "batt_sys_identification", "charging_sim", "feeder_population", "index", "modules", "readme", "test_cases", "test_cases.base_case", "test_cases.battery", "test_cases.battery.feeder_population"], "filenames": ["analysis.rst", "batt_sys_identification.rst", "charging_sim.rst", "feeder_population.rst", "index.rst", "modules.rst", "readme.rst", "test_cases.rst", "test_cases.base_case.rst", "test_cases.battery.rst", "test_cases.battery.feeder_population.rst"], "titles": ["Post-simulation analysis", "Battery System Identification", "Charging simulator", "Feeder population", "Welcome to EV-Ecosim 1.0.0", "Packages", "Readme", "Test cases", "test_cases.base_case package", "test_cases.battery package", "test_cases.battery.feeder_population package"], "terms": {"A": [0, 2], "grid": [0, 2, 4], "awar": 4, "design": 2, "vehicl": 2, "paper": [1, 2], "http": [0, 2], "doi": 2, "org": 2, "10": [1, 2], "36227": 2, "techrxiv": 2, "23596725": 2, "v2": 2, "emmanuel": [], "balogun": 2, "ebalogun": [], "stanford": [], "edu": [], "lili": [], "buechler": [], "ebuech": [], "gismo": [], "slac": [], "gridlab": [3, 4, 10], "d": [3, 4, 10], "instal": 2, "master": [], "branch": [], "github": 4, "com": 2, "arra": [], "energi": 2, "gridlabd": [], "version": [2, 4], "python": 4, "recommend": [], "aw": [], "ec2": [], "hipa": [], "ami": [], "beauharnoi": [], "x": [], "ambient": 2, "_": [], "data": [0, 1, 2], "temperatur": 2, "captur": [], "effect": 2, "environment": [], "condit": [], "subsystem": [], "transform": [0, 2], "base": [0, 1, 2, 4, 10], "load": [0, 1, 2, 3, 10], "includ": [0, 1, 2, 4], "exist": 2, "build": [0, 2], "home": 2, "usual": 2, "uncontrol": [], "within": [0, 1, 2], "distribut": [0, 2, 4], "work": [1, 2], "proprietari": [], "pecan": [], "street": [], "below": [], "an": 2, "exmapl": [], "prototyp": [], "note": 2, "column": 1, "field": 1, "ar": [0, 1, 2], "sensit": 1, "The": [0, 1, 2, 4], "origin": 1, "ha": 2, "minut": 2, "resolut": 2, "power": [0, 2, 3, 4, 10], "system": [0, 2, 3, 4, 5, 10], "batt": 2, "sy": [], "identif": [2, 4, 5], "class": [0, 1, 2, 3, 10], "gener": [1, 2], "paramet": [0, 1, 2, 3, 10], "from": [0, 1, 2, 3], "experiment": [], "leverag": [], "genet": 1, "algorithm": 1, "model": [1, 2, 3, 4, 10], "2nd": [], "order": [], "rc": [], "equival": 1, "circuit": [1, 2], "ecm": 1, "One": [], "can": [0, 1, 2], "custom": [], "nmc": 2, "upload": [], "csv": [1, 2], "file": [0, 1, 2, 3, 10], "param": [1, 2], "shown": 4, "save": [0, 2], "new": [1, 2], "addit": [], "correct": [1, 2], "open": [1, 2], "voltag": [0, 1, 2], "ocv": [1, 2], "valu": [0, 1, 2], "label": 0, "ocv_corr": [], "abov": [], "onc": 2, "thei": 1, "battery_data": [], "config": [2, 5], "json": 2, "modifi": [2, 3, 10], "so": 2, "sim": [2, 5, 7], "contain": [0, 2, 4, 10], "which": [0, 1, 2], "configur": 2, "all": [0, 1, 2, 3], "relev": 2, "implement": [0, 2], "physic": 2, "legaci": [], "forecast": 2, "develop": 4, "need": 2, "elec": [], "rate": 2, "time": [1, 2], "tou": 2, "input": [1, 2], "user": [1, 2], "must": [1, 2], "normal": 0, "full": 2, "year": 2, "size": 1, "365": [], "dai": [0, 2], "avoid": [], "ani": [1, 2], "error": 1, "format": [], "read": [], "sampl": 2, "dure": [1, 2], "should": 2, "one": [1, 2], "15": 2, "also": [0, 2], "help": 2, "downscal": [2, 5], "much": 2, "coarser": [], "librari": 2, "ieee": 0, "test": [1, 2, 4, 5], "pnnl": [], "taxonomi": [], "glm": [3, 10], "have": [1, 2, 4], "spot": [], "specifi": 2, "primari": [], "level": [0, 2], "secondari": 2, "popul": [1, 4, 5], "script": [], "vari": [], "resourc": 0, "necessari": [], "txt": 2, "residenti": [], "repo": [], "limit": 2, "access": [2, 4], "irradi": 2, "overal": [0, 2], "default": [1, 2], "nation": [], "radiat": [], "databas": [], "nsrdb": [], "san": [], "francisco": [], "bai": [], "area": 2, "renew": [], "laboratori": [], "nrel": 0, "month": 2, "index": [2, 4], "1": [1, 2], "12": [0, 2], "inclus": 1, "januari": [], "decemb": 2, "hourli": [], "interv": [], "oversampl": [], "4": [], "dataset": 2, "ghi": 2, "repres": [], "global": 2, "horizont": 2, "w": [], "m": [], "2": 1, "total": 2, "amount": 0, "shortwav": [], "receiv": [], "surfac": 2, "ground": [], "base_cas": [5, 7], "write": [1, 3, 10], "inject": 2, "each": [0, 2], "timestep": [], "rlsf": [], "plu": [], "recurs": [], "least": 2, "squar": [], "filter": [3, 10], "estim": [0, 2, 4], "network": [0, 2, 4], "onlin": [], "thermal": 2, "integr": 4, "plot": [0, 1, 2], "result": [0, 2], "calcul": [0, 2], "impact": 4, "plot_result": 5, "pars": [], "percentag": 1, "violat": 0, "per": [1, 2], "ansi": [], "c84": [], "variabl": 2, "string": 2, "path": 2, "where": 2, "powerflow": [], "output": [2, 3], "node": [0, 2], "load_post_opt_cost": 5, "tabl": [], "matric": [], "respect": 2, "cost_analysi": 5, "costestim": [0, 5], "differ": [0, 2], "compon": 0, "creat": [0, 2], "environ": [], "conda": [], "env": [], "name": 2, "your": 2, "f": 2, "yml": [], "OR": [], "packag": [4, 7], "list": [0, 2, 3], "manual": [], "ensur": [1, 2], "follow": [1, 2], "method": 2, "For": [], "navig": [], "set": [1, 2], "prepar": [], "confirm": [], "successfulli": [], "ieee123_secondari": [], "ieee123_popul": [], "you": [], "done": [1, 2], "initi": 2, "pre": [1, 2], "prep": [], "now": 2, "out": 2, "scenario": [0, 2, 5, 7], "python3": [], "ev50_cosimul": [], "master_sim": [5, 7], "pleas": 1, "see": 1, "section": [], "more": [1, 2], "detail": [], "thi": [0, 1, 2, 4], "cost": [0, 2], "der": [0, 2], "simul": [1, 3, 4, 5, 10], "num_dai": 0, "sourc": [0, 1, 2, 3, 10], "object": [0, 1, 2, 3, 10], "i": [0, 1, 2, 4], "us": [0, 1, 2, 4], "asset": [0, 2], "ev": [0, 2], "ecosim": [0, 2], "number": [0, 1, 2], "run": [0, 1, 2, 4, 5], "calculate_battery_cost": [0, 5], "result_dir": 0, "batteri": [0, 4, 5, 7], "updat": [0, 1, 2], "lcoe": 0, "directori": 0, "dictionari": [0, 2, 3, 10], "return": [0, 1, 2, 3, 10], "dict": [0, 2, 3], "result_dict": 0, "calculate_electricity_cost_pgebev2": [0, 5], "pge_separate_fil": 0, "true": [0, 1, 2], "electr": [0, 2], "pgebev2": 0, "given": [0, 1, 2], "str": [0, 2], "compris": 0, "dollar": 0, "calculate_solar_cost": [0, 5], "pull": [0, 2], "solar": [0, 4, 5], "ref": [0, 2], "www": [0, 2], "gov": 0, "market": 0, "research": 0, "html": 0, "To": 0, "deprec": [0, 2], "soon": 0, "none": [0, 1, 2], "calculate_trans_loss_of_lif": [0, 5], "expect": 0, "loss": [0, 2], "life": [0, 2], "refer": 0, "5": 0, "11": 0, "3": [0, 1, 4], "std": 0, "c57": 0, "00": 0, "2010": 0, "minimum": [0, 2], "insul": 0, "180": 0, "000": 0, "hour": [0, 2], "static": [0, 2], "plot_load": [0, 5], "total_load": 0, "net_load": 0, "prefix": [0, 2], "overlai": 0, "net": [0, 2], "post": [2, 4, 5], "visual": [0, 2, 5], "demand": [0, 2], "control": [0, 5], "minu": 0, "buffer": 0, "legend": 0, "curv": 0, "plot_pow": [0, 5], "power_pr": 0, "predict": [0, 2], "plot_soc": [0, 5], "soc": [0, 1, 2], "soc_pr": 0, "state": [0, 1, 2], "charg": [0, 1, 4, 5], "solar_cost": [0, 5], "capit": 0, "Not": [0, 1, 2], "fulli": [0, 2], "locat": [0, 2], "pv": [0, 2], "transformer_cost": [0, 2, 5], "cannot": [0, 2], "find": [0, 1, 2], "good": 0, "yet": [0, 1, 2], "ag": [0, 2], "battery_typ": [2, 5], "instanti": [1, 2], "constraint": 2, "properti": 2, "mainli": 2, "max": 2, "c": 2, "determin": 2, "capac": 2, "cell": [1, 2], "multipl": 2, "v": 2, "maximum": 2, "allow": 2, "min": 2, "nomin": 2, "kwh": 2, "deliver": 2, "id": 2, "celsiu": 2, "type": 2, "inconsequenti": 2, "current": [1, 2], "dynam": [2, 5], "bu": 2, "resid": 2, "self": 2, "main": [2, 5], "attribut": [1, 2], "battery_setup": [2, 5], "up": 2, "seri": [1, 2], "parallel": 2, "scale": 2, "ah": 2, "setup": [2, 5], "fix": 2, "while": 2, "float": 2, "pack": 2, "wh": 2, "topologi": 2, "battery_setup_2": [2, 5], "instead": 2, "therebi": 2, "same": 2, "pack_max_ah": 2, "watt": 2, "amp": 2, "cell_amp_hr": 2, "cell_voltag": 2, "propag": 2, "forward": 2, "step": [2, 5], "It": [2, 4], "take": [1, 2], "amper": 2, "np": 2, "cycl": 2, "respons": [1, 2], "est_calendar_ag": [2, 5], "constant": 2, "calendar": 2, "sole": 2, "depend": 2, "later": 2, "linear": [1, 2], "est_cyc_ag": [2, 5], "hess": 2, "et": 2, "al": 2, "its": 2, "cvx": 2, "cvxpy": 2, "describ": [1, 2], "function": [2, 3, 10], "get_ocv": [2, 5], "map": 2, "store": 2, "via": [1, 2, 4], "interpol": 2, "obtain": 2, "priori": 2, "": 2, "get_ro": [1, 2, 5], "possibli": 2, "get_aging_valu": [2, 5], "experienc": 2, "far": 2, "get_power_profil": [2, 5], "profil": 2, "certain": 2, "get_properti": [2, 5], "get_roundtrip_effici": [2, 5], "get_total_ag": [2, 5], "get_true_pow": [2, 5], "save_sim_data": [2, 5], "save_prefix": 2, "over": [1, 2], "call": 2, "upon": 2, "conclus": 2, "desir": [1, 2], "folder": [1, 2], "save_st": [2, 5], "state_eqn": [2, 5], "append": 2, "discret": 2, "equat": 2, "here": 2, "g": 2, "l": 2, "plett": 2, "manag": 2, "volum": 2, "artech": 2, "hous": 2, "2015": 2, "vol": 2, "boolean": 2, "decid": 2, "track": 2, "b": 2, "analys": 2, "histori": 2, "vector": [1, 2], "thermal_dynam": [2, 5], "futur": 2, "track_soc": [2, 5], "update_soc": [2, 5], "update_capac": [2, 5], "anticip": 2, "update_max_curr": [2, 5], "verbos": 2, "fals": [1, 2], "update_param": [2, 5], "chang": 2, "update_voltag": [2, 5], "option": 2, "batteryag": [2, 5], "enact": 2, "resist": [1, 2], "datetim": 2, "num_step": 2, "re": 2, "linimncoo2": 2, "ad": 2, "link": [2, 4], "sciencedirect": 2, "scienc": 2, "articl": 2, "pii": 2, "s0378775314001876": 2, "beta_cap": 2, "fade": 2, "factor": 2, "alpha_cap": 2, "beta_r": 2, "growth": 2, "alpha_r": 2, "assumpt": 2, "homogen": 2, "uniform": 2, "across": 2, "vicin": 2, "lfp_cal_ag": [2, 5], "lfp_cyc_ag": [2, 5], "nmc_cal_ag": [2, 5], "nmc_cyc_ag": [2, 5], "get_calendar_ag": [2, 5], "tupl": 2, "due": 2, "get_cyc_ag": [2, 5], "THe": 2, "both": 2, "adopt": 2, "schmalsteig": 2, "update_resist": [2, 5], "program": 2, "usag": 2, "proper": 2, "py": 2, "exampl": 2, "battery_config_path": 2, "r": 2, "battery_config": 2, "params_list": 2, "kei": 2, "params_": 2, "Then": 2, "params_kei": 2, "actual": 2, "those": 2, "prior": 2, "loadtxt": 2, "path_prefix": 2, "constructor": 2, "buffer_batteri": 2, "r_pack": [2, 5], "sum": 2, "aging_c": 2, "lost": 2, "after": 2, "round": 2, "trip": 2, "effici": 2, "_eff": 2, "last": 2, "load_pack_prop": [2, 5], "dx": 2, "nominal_pack_cap": [2, 5], "meth": 2, "intern": 2, "avail": [2, 4], "defer": 2, "TO": 2, "BE": 2, "anymor": 2, "onli": 2, "right": 2, "behavior": 2, "inspect": 2, "end": 2, "host": [1, 2], "station": [2, 4], "storag": 2, "statu": 2, "idl": 2, "produc": 2, "reactiv": 2, "contribut": 2, "retain": 2, "inform": [2, 4], "etc": 2, "ingest": 2, "assign": 2, "get_current_load": [2, 5], "kw": 2, "is_ev_arriv": [2, 5], "is_charg": [2, 5], "set_current_load": [2, 5], "update_load": [2, 5], "net_grid_load": 2, "ev_load": 2, "mpc": [2, 5], "mode": 2, "update_load_oneshot": [2, 5], "offlin": 2, "non": [1, 2], "update_statu": [2, 5], "scheme": [1, 2], "bess": 2, "compute_control": [2, 5], "price_vector": 2, "action": 2, "comput": 2, "pass": 2, "control_act": 2, "signal": 2, "arbitrag": 2, "get_battery_constraint": [2, 5], "requir": 2, "satisfi": 2, "storage_constraint": 2, "initialize_forecast_data": [2, 5], "load_battery_ocv": [2, 5], "learn": 2, "reset_load": [2, 5], "oneshot": [2, 5], "96": 2, "feedback": 2, "price": 2, "structur": [2, 3, 10], "problem": 2, "pge_bev2_": [2, 5], "valid": 2, "california": 2, "howev": [1, 2], "own": 2, "numpi": 2, "arrai": 2, "priceload": [2, 5], "evs": 2, "profit": 2, "loader": 2, "first": 2, "repositori": 2, "input_r": 2, "output_r": 2, "finer": 2, "similar": 2, "panda": [1, 2], "typic": 2, "get_pric": [2, 5], "start_idx": 2, "7": [1, 2], "assum": 2, "do": 2, "int": 2, "start": 2, "cardin": 2, "being": [1, 2], "jan": 2, "ndarrai": 2, "set_month_data": [2, 5], "solv": 2, "objective_typ": 2, "power_demand": 2, "time_r": 2, "0": [1, 2], "solver": [2, 4], "gurobi": 2, "degrad": 2, "convex": 2, "mix": 2, "integ": 2, "select": [1, 2], "separ": 2, "pc": 2, "success": 2, "counter": 2, "identifi": 2, "backend": 2, "invok": 2, "eco": 2, "mosek": 2, "add_demand_charg": [2, 5], "aggregate_constraint": [2, 5], "aggreg": 2, "build_battery_cost": [2, 5], "build_emissions_cost": [2, 5], "emiss": 2, "build_transformer_cost": [2, 5], "get_constraint": [2, 5], "instanc": [1, 2, 3], "chargingsim": [2, 5], "entir": 2, "num_charging_sit": 2, "6": 2, "num_ev": 2, "1600": 2, "custom_ev_data": 2, "custom_ev_data_path": 2, "custom_solar_data": 2, "custom_solar_data_path": 2, "organ": 2, "other": 2, "sequenti": 2, "manner": 2, "bool": 2, "If": 2, "site": 2, "o": 2, "create_battery_object": [2, 5], "idx": 2, "node_prop": 2, "l2": 2, "dcfc": 2, "create_charging_st": [2, 5], "power_nod": 2, "buse": 2, "create_charging_stations_oneshot": [2, 5], "create_solar_object": [2, 5], "loc": 2, "get_act": [2, 5], "get_charger_obj_by_loc": [2, 5], "get_charging_sit": [2, 5], "initialize_aging_sim": [2, 5], "initialize_control": [2, 5], "initialize_price_load": [2, 5], "memori": 2, "initialize_solar_modul": [2, 5], "load_battery_param": [2, 5], "directli": 2, "unless": 2, "otherwis": 2, "load_config": [2, 5], "walk": 2, "through": 2, "them": 2, "load_results_summari": [2, 5], "save_path_prefix": 2, "some": [1, 2], "multistep": [2, 5], "faster": 2, "than": 2, "horizon": 2, "perfect": 2, "foresight": 2, "daili": 2, "reset": 2, "power_nodes_list": 2, "accordingli": 2, "specif": 2, "stepsiz": 2, "update_scenario": [2, 5], "match": 2, "update_step": [2, 5], "move": 2, "namepl": 2, "p_": 2, "eta": 2, "panel": 2, "make": 2, "decis": 2, "flow": [2, 4], "devic": 2, "get_pow": [2, 5], "desired_shap": 2, "get_solar_output": [2, 5], "modify_r": [2, 5], "new_r": 2, "update_histori": [2, 5], "purpos": 2, "mayb": 2, "schedul": 2, "pge": 2, "doc": 2, "found": 2, "add_power_profile_to_object": [2, 5], "battery_power_profil": 2, "build_cost_pge_bev2": [2, 5], "energy_prices_t": 2, "penalize_max_pow": 2, "max_power_pen": 2, "1000": 2, "heurist": 2, "averag": 2, "conserv": 2, "gamma": 2, "build_electricity_cost": [2, 5], "demand_charg": 2, "opt": 2, "build_object": [2, 5], "electricity_cost": 2, "battery_degradation_cost": 2, "we": [2, 4], "minim": 2, "load_pric": [2, 5], "time_interv": 2, "load_base_glm": [3, 5, 9, 10], "base_file_dir": [3, 10], "base_glm_fil": [3, 10], "replace_load_w_met": [3, 5, 9, 10], "glm_dict": [3, 10], "match_str": [3, 10], "rep_str": [3, 10], "obj_typ": [3, 10], "replac": [3, 10], "meter": [3, 10], "replace_load_w_meter_old": [3, 5, 9, 10], "write_base_glm": [3, 5, 9, 10], "globals_list": [3, 10], "include_list": [3, 10], "out_dir": [3, 10], "file_nam": [3, 10], "sync_list": [3, 10], "write_class_dict": [3, 5, 9, 10], "gld_dict": [3, 10], "class_nam": [3, 10], "correspond": [1, 3, 10], "gld": [3, 10], "write_clock_dict": [3, 5, 9, 10], "clock": [3, 10], "write_filter_dict": [3, 5, 9, 10], "write_mod_dict": [3, 5, 9, 10], "mod_nam": [3, 10], "write_obj_dict": [3, 5, 9, 10], "dict_kei": [3, 10], "co": 4, "platform": 4, "interfac": 4, "phase": 4, "unbalanc": 4, "fast": 4, "made": 4, "web": [1, 4], "tool": [1, 4], "public": 4, "most": 4, "code": 4, "document": [1, 4], "project": 4, "still": 4, "under": 4, "activ": 4, "improv": 4, "todo": 4, "tutori": 4, "analysi": [4, 5], "feeder": [4, 5], "case": [1, 4, 5], "readm": 4, "guid": [], "cite": [], "modul": [1, 4, 5], "search": [1, 4], "page": 4, "submodul": [5, 7], "content": 5, "charging_sim": 5, "batteryagingsim": 5, "batterypack": 5, "batterytest": 5, "capacitor": 5, "chargingst": 5, "electricitypric": 5, "optim": [1, 5], "orchestr": 5, "util": 5, "feeder_popul": [5, 7, 9], "glm_mod_funct": [5, 7, 9], "subpackag": 5, "test_cas": [5, 7], "event_handl": [5, 7], "gblvar": [5, 7], "glmptime": [5, 7], "voltdump2": [5, 7], "data_analysi": [5, 7], "event_handlers_oneshot": [5, 7], "parse_voltag": [5, 7], "feeder_population_old": [7, 9], "without": 2, "studi": 2, "character": 2, "what": 2, "would": 2, "occur": 2, "situ": 2, "wa": [1, 2], "make_scenario": [2, 5], "No": 2, "preload": 2, "reflect": 2, "run_scenario_singl": [2, 5], "singl": 2, "run_scenarios_parallel": [2, 5], "multiprocess": 2, "enough": 2, "core": 2, "ram": 2, "mai": [1, 2], "lead": 2, "process": 2, "freez": 2, "run_scenarios_sequenti": [2, 5], "combin": [1, 2], "fit": 1, "batt_sys_identif": 1, "battery_identif": 1, "batteryparam": [1, 5], "datafram": 1, "liter": 1, "how": 1, "pd": 1, "read_csv": 1, "data_path": 1, "run_sys_identif": [1, 5], "plot_correction_scheme_comparison": [1, 5], "download": 1, "ga": [1, 5], "num_gener": 1, "100": 1, "num_parents_m": 1, "sol_per_pop": 1, "num_gen": 1, "crossover_typ": 1, "single_point": 1, "mutation_typ": 1, "adapt": 1, "parent_selection_typ": 1, "sss": 1, "mutation_percent_gen": 1, "60": 1, "mutation_prob": 1, "crossover_prob": 1, "pygad": 1, "offici": 1, "explan": 1, "been": 1, "accuraci": 1, "speed": 1, "better": 1, "parent": 1, "form": 1, "next": 1, "offspr": 1, "solut": 1, "gene": 1, "cross": 1, "between": 1, "mate": 1, "mutat": 1, "undergo": 1, "probabl": 1, "appli": 1, "oper": 1, "Its": 1, "high": 1, "frequenc": 1, "ro": 1, "r_o": 1, "get_corrected_voltag": [1, 5], "get_uncorrected_voltag": [1, 5], "uncorrect": 1, "plot_ro": [1, 5], "xlim": 1, "20000": 1, "36000": 1, "ylim": 1, "75": 1, "85": 1, "run_ocv_correct": [1, 5], "use_quadrat": 1, "cell_nam": 1, "diagn": 1, "quadrat": 1, "run_pre_check": [1, 5], "check": 1, "length": 1, "begin": 1, "use_initial_pop": 1, "quadratic_bia": 1, "simulate_respons": [1, 5], "complet": 1}, "objects": {"": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "charging_sim"], [3, 0, 0, "-", "feeder_population"], [7, 0, 0, "-", "test_cases"]], "analysis": [[0, 0, 0, "-", "cost_analysis"]], "analysis.cost_analysis": [[0, 1, 1, "", "CostEstimator"]], "analysis.cost_analysis.CostEstimator": [[0, 2, 1, "", "calculate_battery_cost"], [0, 2, 1, "", "calculate_electricity_cost_PGEBEV2s"], [0, 2, 1, "", "calculate_solar_cost"], [0, 2, 1, "", "calculate_trans_loss_of_life"], [0, 2, 1, "", "plot_loads"], [0, 2, 1, "", "plot_power"], [0, 2, 1, "", "plot_soc"], [0, 2, 1, "", "solar_cost"], [0, 2, 1, "", "transformer_cost"]], "batt_sys_identification": [[1, 0, 0, "-", "battery_identification"]], "batt_sys_identification.battery_identification": [[1, 1, 1, "", "BatteryParams"]], "batt_sys_identification.battery_identification.BatteryParams": [[1, 2, 1, "", "ga"], [1, 2, 1, "", "get_Ro"], [1, 2, 1, "", "get_corrected_voltages"], [1, 2, 1, "", "get_uncorrected_voltages"], [1, 2, 1, "", "plot_Ro"], [1, 2, 1, "", "plot_correction_scheme_comparison"], [1, 2, 1, "", "run_ocv_correction"], [1, 2, 1, "", "run_pre_checks"], [1, 2, 1, "", "run_sys_identification"], [1, 2, 1, "", "simulate_response"]], "charging_sim": [[2, 0, 0, "-", "battery"], [2, 0, 0, "-", "batteryAgingSim"], [2, 0, 0, "-", "batterypack"], [2, 0, 0, "-", "capacitor"], [2, 0, 0, "-", "chargingStation"], [2, 0, 0, "-", "controller"], [2, 0, 0, "-", "electricityPrices"], [2, 0, 0, "-", "optimization"], [2, 0, 0, "-", "orchestrator"], [2, 0, 0, "-", "simulate"], [2, 0, 0, "-", "solar"], [2, 0, 0, "-", "utils"]], "charging_sim.battery": [[2, 1, 1, "", "Battery"], [2, 3, 1, "", "test"]], "charging_sim.battery.Battery": [[2, 2, 1, "", "battery_setup"], [2, 2, 1, "", "battery_setup_2"], [2, 2, 1, "", "dynamics"], [2, 2, 1, "", "est_calendar_aging"], [2, 2, 1, "", "est_cyc_aging"], [2, 2, 1, "", "get_OCV"], [2, 2, 1, "", "get_Ro"], [2, 2, 1, "", "get_aging_value"], [2, 2, 1, "", "get_power_profile"], [2, 2, 1, "", "get_properties"], [2, 2, 1, "", "get_roundtrip_efficiency"], [2, 2, 1, "", "get_total_aging"], [2, 2, 1, "", "get_true_power"], [2, 2, 1, "", "save_sim_data"], [2, 2, 1, "", "save_states"], [2, 2, 1, "", "state_eqn"], [2, 2, 1, "", "thermal_dynamics"], [2, 2, 1, "", "track_SOC"], [2, 2, 1, "", "update_SOC"], [2, 2, 1, "", "update_capacity"], [2, 2, 1, "", "update_max_current"], [2, 2, 1, "", "update_params"], [2, 2, 1, "", "update_voltage"], [2, 2, 1, "", "visualize"]], "charging_sim.batteryAgingSim": [[2, 1, 1, "", "BatteryAging"]], "charging_sim.batteryAgingSim.BatteryAging": [[2, 2, 1, "", "LFP_cal_aging"], [2, 2, 1, "", "LFP_cyc_aging"], [2, 2, 1, "", "NMC_cal_aging"], [2, 2, 1, "", "NMC_cyc_aging"], [2, 2, 1, "", "get_aging_value"], [2, 2, 1, "", "get_calendar_aging"], [2, 2, 1, "", "get_cyc_aging"], [2, 2, 1, "", "get_total_aging"], [2, 2, 1, "", "run"], [2, 2, 1, "", "update_capacity"], [2, 2, 1, "", "update_resistance"]], "charging_sim.batterypack": [[2, 1, 1, "", "Battery"], [2, 3, 1, "", "test"]], "charging_sim.batterypack.Battery": [[2, 4, 1, "", "R_pack"], [2, 2, 1, "", "battery_setup"], [2, 2, 1, "", "battery_setup_2"], [2, 4, 1, "", "battery_type"], [2, 4, 1, "", "config"], [2, 4, 1, "", "controller"], [2, 2, 1, "", "dynamics"], [2, 2, 1, "", "est_calendar_aging"], [2, 2, 1, "", "est_cyc_aging"], [2, 2, 1, "", "get_OCV"], [2, 2, 1, "", "get_aging_value"], [2, 2, 1, "", "get_power_profile"], [2, 2, 1, "", "get_roundtrip_efficiency"], [2, 2, 1, "", "get_total_aging"], [2, 2, 1, "", "get_true_power"], [2, 2, 1, "", "load_pack_props"], [2, 4, 1, "", "nominal_pack_cap"], [2, 2, 1, "", "save_sim_data"], [2, 2, 1, "", "state_eqn"], [2, 2, 1, "", "thermal_dynamics"], [2, 2, 1, "", "track_SOC"], [2, 2, 1, "", "update_capacity"], [2, 2, 1, "", "update_max_current"], [2, 2, 1, "", "update_voltage"], [2, 2, 1, "", "visualize"]], "charging_sim.capacitor": [[2, 1, 1, "", "Capacitor"]], "charging_sim.chargingStation": [[2, 1, 1, "", "ChargingStation"]], "charging_sim.chargingStation.ChargingStation": [[2, 2, 1, "", "get_current_load"], [2, 2, 1, "", "is_EV_arrived"], [2, 2, 1, "", "is_charging"], [2, 2, 1, "", "save_sim_data"], [2, 2, 1, "", "set_current_load"], [2, 2, 1, "", "update_load"], [2, 2, 1, "", "update_load_oneshot"], [2, 2, 1, "", "update_status"], [2, 2, 1, "", "visualize"]], "charging_sim.controller": [[2, 1, 1, "", "MPC"], [2, 1, 1, "", "Oneshot"]], "charging_sim.controller.MPC": [[2, 2, 1, "", "compute_control"], [2, 2, 1, "", "get_battery_constraints"], [2, 2, 1, "", "initialize_forecast_data"], [2, 2, 1, "", "load_battery_ocv"], [2, 2, 1, "", "reset_load"]], "charging_sim.controller.Oneshot": [[2, 2, 1, "", "compute_control"], [2, 2, 1, "", "get_battery_constraints"], [2, 2, 1, "", "load_battery_ocv"], [2, 2, 1, "", "reset_load"]], "charging_sim.electricityPrices": [[2, 1, 1, "", "PriceLoader"], [2, 3, 1, "", "main"]], "charging_sim.electricityPrices.PriceLoader": [[2, 2, 1, "", "downscale"], [2, 2, 1, "", "get_prices"], [2, 2, 1, "", "set_month_data"]], "charging_sim.optimization": [[2, 1, 1, "", "Optimization"]], "charging_sim.optimization.Optimization": [[2, 2, 1, "", "add_demand_charge"], [2, 2, 1, "", "aggregate_constraints"], [2, 2, 1, "", "build_battery_cost"], [2, 2, 1, "", "build_emissions_cost"], [2, 2, 1, "", "build_transformer_cost"], [2, 2, 1, "", "get_battery_constraint"], [2, 2, 1, "", "get_constraints"], [2, 2, 1, "", "run"]], "charging_sim.orchestrator": [[2, 1, 1, "", "ChargingSim"]], "charging_sim.orchestrator.ChargingSim": [[2, 2, 1, "", "create_battery_object"], [2, 2, 1, "", "create_charging_stations"], [2, 2, 1, "", "create_charging_stations_oneshot"], [2, 2, 1, "", "create_solar_object"], [2, 2, 1, "", "get_action"], [2, 2, 1, "", "get_charger_obj_by_loc"], [2, 2, 1, "", "get_charging_sites"], [2, 2, 1, "", "initialize_aging_sim"], [2, 2, 1, "", "initialize_controllers"], [2, 2, 1, "", "initialize_price_loader"], [2, 2, 1, "", "initialize_solar_module"], [2, 2, 1, "", "load_battery_params"], [2, 2, 1, "", "load_config"], [2, 2, 1, "", "load_results_summary"], [2, 2, 1, "", "multistep"], [2, 2, 1, "", "reset_loads"], [2, 2, 1, "", "setup"], [2, 2, 1, "", "step"], [2, 2, 1, "", "update_scenario"], [2, 2, 1, "", "update_steps"]], "charging_sim.simulate": [[2, 3, 1, "", "make_scenarios"], [2, 3, 1, "", "run"], [2, 3, 1, "", "run_scenario_single"], [2, 3, 1, "", "run_scenarios_parallel"], [2, 3, 1, "", "run_scenarios_sequential"]], "charging_sim.solar": [[2, 1, 1, "", "Solar"], [2, 3, 1, "", "main"]], "charging_sim.solar.Solar": [[2, 2, 1, "", "downscale"], [2, 2, 1, "", "get_constraints"], [2, 2, 1, "", "get_power"], [2, 2, 1, "", "get_solar_output"], [2, 2, 1, "", "modify_res"], [2, 2, 1, "", "update_history"]], "charging_sim.utils": [[2, 3, 1, "", "PGE_BEV2_S"], [2, 3, 1, "", "add_power_profile_to_object"], [2, 3, 1, "", "build_cost_PGE_BEV2S"], [2, 3, 1, "", "build_electricity_cost"], [2, 3, 1, "", "build_objective"], [2, 3, 1, "", "load_prices"]], "feeder_population": [[3, 0, 0, "-", "glm_mod_functions"]], "feeder_population.glm_mod_functions": [[3, 3, 1, "", "load_base_glm"], [3, 3, 1, "", "replace_load_w_meter"], [3, 3, 1, "", "replace_load_w_meter_old"], [3, 3, 1, "", "write_base_glm"], [3, 3, 1, "", "write_class_dict"], [3, 3, 1, "", "write_clock_dict"], [3, 3, 1, "", "write_filter_dict"], [3, 3, 1, "", "write_mod_dict"], [3, 3, 1, "", "write_obj_dict"]], "test_cases": [[8, 0, 0, "-", "base_case"], [9, 0, 0, "-", "battery"]], "test_cases.battery": [[10, 0, 0, "-", "feeder_population"]], "test_cases.battery.feeder_population": [[10, 0, 0, "-", "glm_mod_functions"]], "test_cases.battery.feeder_population.glm_mod_functions": [[10, 3, 1, "", "load_base_glm"], [10, 3, 1, "", "replace_load_w_meter"], [10, 3, 1, "", "replace_load_w_meter_old"], [10, 3, 1, "", "write_base_glm"], [10, 3, 1, "", "write_class_dict"], [10, 3, 1, "", "write_clock_dict"], [10, 3, 1, "", "write_filter_dict"], [10, 3, 1, "", "write_mod_dict"], [10, 3, 1, "", "write_obj_dict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"ev": 4, "ecosim": 4, "platform": [], "author": [], "requir": [], "folder": [], "descript": [], "ambient_data": [], "base_load_data": [], "batt_sys_identif": [], "charging_sim": 2, "batteri": [1, 2, 9, 10], "py": [], "cell": [], "modul": [0, 2, 3, 7, 8, 9, 10], "batterypack": 2, "pack": [], "batteryagingsim": 2, "ag": [], "control": 2, "chargingst": 2, "charg": 2, "station": [], "electricitypric": 2, "electr": [], "price": [], "optim": 2, "orchestr": 2, "simul": [0, 2], "solar": 2, "pv": [], "util": 2, "host": [], "function": [], "us": [], "some": [], "offlin": [], "der": [], "cost": [], "minim": [], "thi": [], "i": [], "run": [], "mode": [], "state": [], "feedback": [], "dlmodel": [], "elec_r": [], "feeder": 3, "feeder_popul": [3, 10], "solar_data": [], "test_cas": [8, 9, 10], "co": [], "case": 7, "analysi": 0, "how": [], "post": 0, "packag": [5, 8, 9, 10], "submodul": [0, 1, 2, 3, 8, 9, 10], "cost_analysi": 0, "load_post_opt_cost": 0, "plot_result": 0, "content": [0, 2, 3, 4, 7, 8, 9, 10], "batterytest": 2, "capacitor": 2, "popul": 3, "glm_mod_funct": [3, 10], "welcom": 4, "1": 4, "0": 4, "indic": 4, "tabl": 4, "test": 7, "subpackag": [7, 9], "base_cas": 8, "event_handl": [8, 9], "gblvar": [8, 9], "glmptime": [8, 9], "master_sim": [8, 9], "sim": [8, 9], "voltdump2": [8, 9], "data_analysi": 9, "event_handlers_oneshot": 9, "parse_voltag": 9, "scenario": 9, "feeder_population_old": 10, "readm": 6, "system": 1, "identif": 1}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Submodules": [[1, "submodules"], [0, "submodules"], [2, "submodules"], [3, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"]], "Battery System Identification": [[1, "battery-system-identification"]], "Battery system identification": [[1, "id1"]], "Welcome to EV-Ecosim 1.0.0": [[4, "welcome-to-ev-ecosim-1-0-0"]], "Contents:": [[4, null]], "Indices and tables": [[4, "indices-and-tables"]], "Readme": [[6, "readme"]], "Test cases": [[7, "test-cases"]], "Subpackages": [[7, "subpackages"], [9, "subpackages"]], "Module contents": [[7, "module-test_cases"], [0, "module-analysis"], [2, "module-charging_sim"], [3, "module-feeder_population"], [8, "module-test_cases.base_case"], [9, "module-test_cases.battery"], [10, "module-test_cases.battery.feeder_population"]], "Post-simulation analysis": [[0, "post-simulation-analysis"]], "cost_analysis module": [[0, "module-analysis.cost_analysis"]], "load_post_opt_costs module": [[0, "load-post-opt-costs-module"]], "plot_results module": [[0, "plot-results-module"]], "Charging simulator": [[2, "charging-simulator"]], "charging_sim.battery module": [[2, "module-charging_sim.battery"]], "charging_sim.batteryAgingSim module": [[2, "module-charging_sim.batteryAgingSim"]], "charging_sim.batterypack module": [[2, "module-charging_sim.batterypack"]], "charging_sim.batterytest module": [[2, "charging-sim-batterytest-module"]], "charging_sim.capacitor module": [[2, "module-charging_sim.capacitor"]], "charging_sim.chargingStation module": [[2, "module-charging_sim.chargingStation"]], "charging_sim.controller module": [[2, "module-charging_sim.controller"]], "charging_sim.electricityPrices module": [[2, "module-charging_sim.electricityPrices"]], "charging_sim.optimization module": [[2, "module-charging_sim.optimization"]], "charging_sim.orchestrator module": [[2, "module-charging_sim.orchestrator"]], "charging_sim.simulate module": [[2, "module-charging_sim.simulate"]], "charging_sim.solar module": [[2, "module-charging_sim.solar"]], "charging_sim.utils module": [[2, "module-charging_sim.utils"]], "Feeder population": [[3, "feeder-population"]], "feeder_population.feeder_population module": [[3, "feeder-population-feeder-population-module"]], "feeder_population.glm_mod_functions module": [[3, "module-feeder_population.glm_mod_functions"]], "Packages": [[5, "packages"]], "test_cases.base_case package": [[8, "test-cases-base-case-package"]], "test_cases.base_case.event_handlers module": [[8, "test-cases-base-case-event-handlers-module"]], "test_cases.base_case.gblvar module": [[8, "test-cases-base-case-gblvar-module"]], "test_cases.base_case.glmptime module": [[8, "test-cases-base-case-glmptime-module"]], "test_cases.base_case.master_sim module": [[8, "test-cases-base-case-master-sim-module"]], "test_cases.base_case.sim module": [[8, "test-cases-base-case-sim-module"]], "test_cases.base_case.voltdump2 module": [[8, "test-cases-base-case-voltdump2-module"]], "test_cases.battery package": [[9, "test-cases-battery-package"]], "test_cases.battery.data_analysis module": [[9, "test-cases-battery-data-analysis-module"]], "test_cases.battery.event_handlers module": [[9, "test-cases-battery-event-handlers-module"]], "test_cases.battery.event_handlers_oneshot module": [[9, "test-cases-battery-event-handlers-oneshot-module"]], "test_cases.battery.gblvar module": [[9, "test-cases-battery-gblvar-module"]], "test_cases.battery.glmptime module": [[9, "test-cases-battery-glmptime-module"]], "test_cases.battery.master_sim module": [[9, "test-cases-battery-master-sim-module"]], "test_cases.battery.parse_voltages module": [[9, "test-cases-battery-parse-voltages-module"]], "test_cases.battery.scenarios module": [[9, "test-cases-battery-scenarios-module"]], "test_cases.battery.sim module": [[9, "test-cases-battery-sim-module"]], "test_cases.battery.voltdump2 module": [[9, "test-cases-battery-voltdump2-module"]], "test_cases.battery.feeder_population package": [[10, "test-cases-battery-feeder-population-package"]], "test_cases.battery.feeder_population.feeder_population module": [[10, "test-cases-battery-feeder-population-feeder-population-module"]], "test_cases.battery.feeder_population.feeder_population_old module": [[10, "test-cases-battery-feeder-population-feeder-population-old-module"]], "test_cases.battery.feeder_population.glm_mod_functions module": [[10, "module-test_cases.battery.feeder_population.glm_mod_functions"]]}, "indexentries": {"costestimator (class in analysis.cost_analysis)": [[0, "analysis.cost_analysis.CostEstimator"]], "analysis": [[0, "module-analysis"]], "analysis.cost_analysis": [[0, "module-analysis.cost_analysis"]], "calculate_battery_cost() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.calculate_battery_cost"]], "calculate_electricity_cost_pgebev2s() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.calculate_electricity_cost_PGEBEV2s"]], "calculate_solar_cost() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.calculate_solar_cost"]], "calculate_trans_loss_of_life() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.calculate_trans_loss_of_life"]], "module": [[0, "module-analysis"], [0, "module-analysis.cost_analysis"], [2, "module-charging_sim"], [2, "module-charging_sim.battery"], [2, "module-charging_sim.batteryAgingSim"], [2, "module-charging_sim.batterypack"], [2, "module-charging_sim.capacitor"], [2, "module-charging_sim.chargingStation"], [2, "module-charging_sim.controller"], [2, "module-charging_sim.electricityPrices"], [2, "module-charging_sim.optimization"], [2, "module-charging_sim.orchestrator"], [2, "module-charging_sim.simulate"], [2, "module-charging_sim.solar"], [2, "module-charging_sim.utils"], [3, "module-feeder_population"], [3, "module-feeder_population.glm_mod_functions"], [7, "module-test_cases"], [8, "module-test_cases.base_case"], [9, "module-test_cases.battery"], [10, "module-test_cases.battery.feeder_population"], [10, "module-test_cases.battery.feeder_population.glm_mod_functions"]], "plot_loads() (analysis.cost_analysis.costestimator static method)": [[0, "analysis.cost_analysis.CostEstimator.plot_loads"]], "plot_power() (analysis.cost_analysis.costestimator static method)": [[0, "analysis.cost_analysis.CostEstimator.plot_power"]], "plot_soc() (analysis.cost_analysis.costestimator static method)": [[0, "analysis.cost_analysis.CostEstimator.plot_soc"]], "solar_cost() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.solar_cost"]], "transformer_cost() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.transformer_cost"]], "battery (class in charging_sim.battery)": [[2, "charging_sim.battery.Battery"]], "battery (class in charging_sim.batterypack)": [[2, "charging_sim.batterypack.Battery"]], "batteryaging (class in charging_sim.batteryagingsim)": [[2, "charging_sim.batteryAgingSim.BatteryAging"]], "capacitor (class in charging_sim.capacitor)": [[2, "charging_sim.capacitor.Capacitor"]], "chargingsim (class in charging_sim.orchestrator)": [[2, "charging_sim.orchestrator.ChargingSim"]], "chargingstation (class in charging_sim.chargingstation)": [[2, "charging_sim.chargingStation.ChargingStation"]], "lfp_cal_aging() (charging_sim.batteryagingsim.batteryaging static method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.LFP_cal_aging"]], "lfp_cyc_aging() (charging_sim.batteryagingsim.batteryaging static method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.LFP_cyc_aging"]], "mpc (class in charging_sim.controller)": [[2, "charging_sim.controller.MPC"]], "nmc_cal_aging() (charging_sim.batteryagingsim.batteryaging static method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.NMC_cal_aging"]], "nmc_cyc_aging() (charging_sim.batteryagingsim.batteryaging static method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.NMC_cyc_aging"]], "oneshot (class in charging_sim.controller)": [[2, "charging_sim.controller.Oneshot"]], "optimization (class in charging_sim.optimization)": [[2, "charging_sim.optimization.Optimization"]], "pge_bev2_s() (in module charging_sim.utils)": [[2, "charging_sim.utils.PGE_BEV2_S"]], "priceloader (class in charging_sim.electricityprices)": [[2, "charging_sim.electricityPrices.PriceLoader"]], "r_pack (charging_sim.batterypack.battery attribute)": [[2, "charging_sim.batterypack.Battery.R_pack"]], "solar (class in charging_sim.solar)": [[2, "charging_sim.solar.Solar"]], "add_demand_charge() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.add_demand_charge"]], "add_power_profile_to_object() (in module charging_sim.utils)": [[2, "charging_sim.utils.add_power_profile_to_object"]], "aggregate_constraints() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.aggregate_constraints"]], "battery_setup() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.battery_setup"]], "battery_setup() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.battery_setup"]], "battery_setup_2() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.battery_setup_2"]], "battery_setup_2() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.battery_setup_2"]], "battery_type (charging_sim.batterypack.battery attribute)": [[2, "charging_sim.batterypack.Battery.battery_type"]], "build_battery_cost() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.build_battery_cost"]], "build_cost_pge_bev2s() (in module charging_sim.utils)": [[2, "charging_sim.utils.build_cost_PGE_BEV2S"]], "build_electricity_cost() (in module charging_sim.utils)": [[2, "charging_sim.utils.build_electricity_cost"]], "build_emissions_cost() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.build_emissions_cost"]], "build_objective() (in module charging_sim.utils)": [[2, "charging_sim.utils.build_objective"]], "build_transformer_cost() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.build_transformer_cost"]], "charging_sim": [[2, "module-charging_sim"]], "charging_sim.battery": [[2, "module-charging_sim.battery"]], "charging_sim.batteryagingsim": [[2, "module-charging_sim.batteryAgingSim"]], "charging_sim.batterypack": [[2, "module-charging_sim.batterypack"]], "charging_sim.capacitor": [[2, "module-charging_sim.capacitor"]], "charging_sim.chargingstation": [[2, "module-charging_sim.chargingStation"]], "charging_sim.controller": [[2, "module-charging_sim.controller"]], "charging_sim.electricityprices": [[2, "module-charging_sim.electricityPrices"]], "charging_sim.optimization": [[2, "module-charging_sim.optimization"]], "charging_sim.orchestrator": [[2, "module-charging_sim.orchestrator"]], "charging_sim.simulate": [[2, "module-charging_sim.simulate"]], "charging_sim.solar": [[2, "module-charging_sim.solar"]], "charging_sim.utils": [[2, "module-charging_sim.utils"]], "compute_control() (charging_sim.controller.mpc method)": [[2, "charging_sim.controller.MPC.compute_control"]], "compute_control() (charging_sim.controller.oneshot method)": [[2, "charging_sim.controller.Oneshot.compute_control"]], "config (charging_sim.batterypack.battery attribute)": [[2, "charging_sim.batterypack.Battery.config"]], "controller (charging_sim.batterypack.battery attribute)": [[2, "charging_sim.batterypack.Battery.controller"]], "create_battery_object() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.create_battery_object"]], "create_charging_stations() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.create_charging_stations"]], "create_charging_stations_oneshot() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.create_charging_stations_oneshot"]], "create_solar_object() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.create_solar_object"]], "downscale() (charging_sim.electricityprices.priceloader method)": [[2, "charging_sim.electricityPrices.PriceLoader.downscale"]], "downscale() (charging_sim.solar.solar method)": [[2, "charging_sim.solar.Solar.downscale"]], "dynamics() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.dynamics"]], "dynamics() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.dynamics"]], "est_calendar_aging() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.est_calendar_aging"]], "est_calendar_aging() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.est_calendar_aging"]], "est_cyc_aging() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.est_cyc_aging"]], "est_cyc_aging() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.est_cyc_aging"]], "get_ocv() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.get_OCV"]], "get_ocv() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.get_OCV"]], "get_ro() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.get_Ro"]], "get_action() (charging_sim.orchestrator.chargingsim static method)": [[2, "charging_sim.orchestrator.ChargingSim.get_action"]], "get_aging_value() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.get_aging_value"]], "get_aging_value() (charging_sim.batteryagingsim.batteryaging method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.get_aging_value"]], "get_aging_value() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.get_aging_value"]], "get_battery_constraint() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.get_battery_constraint"]], "get_battery_constraints() (charging_sim.controller.mpc method)": [[2, "charging_sim.controller.MPC.get_battery_constraints"]], "get_battery_constraints() (charging_sim.controller.oneshot method)": [[2, "charging_sim.controller.Oneshot.get_battery_constraints"]], "get_calendar_aging() (charging_sim.batteryagingsim.batteryaging method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.get_calendar_aging"]], "get_charger_obj_by_loc() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.get_charger_obj_by_loc"]], "get_charging_sites() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.get_charging_sites"]], "get_constraints() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.get_constraints"]], "get_constraints() (charging_sim.solar.solar method)": [[2, "charging_sim.solar.Solar.get_constraints"]], "get_current_load() (charging_sim.chargingstation.chargingstation method)": [[2, "charging_sim.chargingStation.ChargingStation.get_current_load"]], "get_cyc_aging() (charging_sim.batteryagingsim.batteryaging method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.get_cyc_aging"]], "get_power() (charging_sim.solar.solar method)": [[2, "charging_sim.solar.Solar.get_power"]], "get_power_profile() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.get_power_profile"]], "get_power_profile() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.get_power_profile"]], "get_prices() (charging_sim.electricityprices.priceloader method)": [[2, "charging_sim.electricityPrices.PriceLoader.get_prices"]], "get_properties() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.get_properties"]], "get_roundtrip_efficiency() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.get_roundtrip_efficiency"]], "get_roundtrip_efficiency() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.get_roundtrip_efficiency"]], "get_solar_output() (charging_sim.solar.solar method)": [[2, "charging_sim.solar.Solar.get_solar_output"]], "get_total_aging() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.get_total_aging"]], "get_total_aging() (charging_sim.batteryagingsim.batteryaging method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.get_total_aging"]], "get_total_aging() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.get_total_aging"]], "get_true_power() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.get_true_power"]], "get_true_power() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.get_true_power"]], "initialize_aging_sim() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.initialize_aging_sim"]], "initialize_controllers() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.initialize_controllers"]], "initialize_forecast_data() (charging_sim.controller.mpc method)": [[2, "charging_sim.controller.MPC.initialize_forecast_data"]], "initialize_price_loader() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.initialize_price_loader"]], "initialize_solar_module() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.initialize_solar_module"]], "is_ev_arrived() (charging_sim.chargingstation.chargingstation method)": [[2, "charging_sim.chargingStation.ChargingStation.is_EV_arrived"]], "is_charging() (charging_sim.chargingstation.chargingstation method)": [[2, "charging_sim.chargingStation.ChargingStation.is_charging"]], "load_battery_ocv() (charging_sim.controller.mpc method)": [[2, "charging_sim.controller.MPC.load_battery_ocv"]], "load_battery_ocv() (charging_sim.controller.oneshot method)": [[2, "charging_sim.controller.Oneshot.load_battery_ocv"]], "load_battery_params() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.load_battery_params"]], "load_config() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.load_config"]], "load_pack_props() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.load_pack_props"]], "load_prices() (in module charging_sim.utils)": [[2, "charging_sim.utils.load_prices"]], "load_results_summary() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.load_results_summary"]], "main() (in module charging_sim.electricityprices)": [[2, "charging_sim.electricityPrices.main"]], "main() (in module charging_sim.solar)": [[2, "charging_sim.solar.main"]], "make_scenarios() (in module charging_sim.simulate)": [[2, "charging_sim.simulate.make_scenarios"]], "modify_res() (charging_sim.solar.solar method)": [[2, "charging_sim.solar.Solar.modify_res"]], "multistep() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.multistep"]], "nominal_pack_cap (charging_sim.batterypack.battery attribute)": [[2, "charging_sim.batterypack.Battery.nominal_pack_cap"]], "reset_load() (charging_sim.controller.mpc method)": [[2, "charging_sim.controller.MPC.reset_load"]], "reset_load() (charging_sim.controller.oneshot method)": [[2, "charging_sim.controller.Oneshot.reset_load"]], "reset_loads() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.reset_loads"]], "run() (charging_sim.batteryagingsim.batteryaging method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.run"]], "run() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.run"]], "run() (in module charging_sim.simulate)": [[2, "charging_sim.simulate.run"]], "run_scenario_single() (in module charging_sim.simulate)": [[2, "charging_sim.simulate.run_scenario_single"]], "run_scenarios_parallel() (in module charging_sim.simulate)": [[2, "charging_sim.simulate.run_scenarios_parallel"]], "run_scenarios_sequential() (in module charging_sim.simulate)": [[2, "charging_sim.simulate.run_scenarios_sequential"]], "save_sim_data() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.save_sim_data"]], "save_sim_data() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.save_sim_data"]], "save_sim_data() (charging_sim.chargingstation.chargingstation method)": [[2, "charging_sim.chargingStation.ChargingStation.save_sim_data"]], "save_states() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.save_states"]], "set_current_load() (charging_sim.chargingstation.chargingstation method)": [[2, "charging_sim.chargingStation.ChargingStation.set_current_load"]], "set_month_data() (charging_sim.electricityprices.priceloader method)": [[2, "charging_sim.electricityPrices.PriceLoader.set_month_data"]], "setup() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.setup"]], "state_eqn() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.state_eqn"]], "state_eqn() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.state_eqn"]], "step() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.step"]], "test() (in module charging_sim.battery)": [[2, "charging_sim.battery.test"]], "test() (in module charging_sim.batterypack)": [[2, "charging_sim.batterypack.test"]], "thermal_dynamics() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.thermal_dynamics"]], "thermal_dynamics() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.thermal_dynamics"]], "track_soc() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.track_SOC"]], "track_soc() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.track_SOC"]], "update_soc() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.update_SOC"]], "update_capacity() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.update_capacity"]], "update_capacity() (charging_sim.batteryagingsim.batteryaging method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.update_capacity"]], "update_capacity() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.update_capacity"]], "update_history() (charging_sim.solar.solar method)": [[2, "charging_sim.solar.Solar.update_history"]], "update_load() (charging_sim.chargingstation.chargingstation method)": [[2, "charging_sim.chargingStation.ChargingStation.update_load"]], "update_load_oneshot() (charging_sim.chargingstation.chargingstation method)": [[2, "charging_sim.chargingStation.ChargingStation.update_load_oneshot"]], "update_max_current() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.update_max_current"]], "update_max_current() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.update_max_current"]], "update_params() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.update_params"]], "update_resistance() (charging_sim.batteryagingsim.batteryaging method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.update_resistance"]], "update_scenario() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.update_scenario"]], "update_status() (charging_sim.chargingstation.chargingstation method)": [[2, "charging_sim.chargingStation.ChargingStation.update_status"]], "update_steps() (charging_sim.orchestrator.chargingsim method)": [[2, "charging_sim.orchestrator.ChargingSim.update_steps"]], "update_voltage() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.update_voltage"]], "update_voltage() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.update_voltage"]], "visualize() (charging_sim.battery.battery method)": [[2, "charging_sim.battery.Battery.visualize"]], "visualize() (charging_sim.batterypack.battery method)": [[2, "charging_sim.batterypack.Battery.visualize"]], "visualize() (charging_sim.chargingstation.chargingstation method)": [[2, "charging_sim.chargingStation.ChargingStation.visualize"]], "feeder_population": [[3, "module-feeder_population"]], "feeder_population.glm_mod_functions": [[3, "module-feeder_population.glm_mod_functions"]], "load_base_glm() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.load_base_glm"]], "replace_load_w_meter() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.replace_load_w_meter"]], "replace_load_w_meter_old() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.replace_load_w_meter_old"]], "write_base_glm() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.write_base_glm"]], "write_class_dict() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.write_class_dict"]], "write_clock_dict() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.write_clock_dict"]], "write_filter_dict() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.write_filter_dict"]], "write_mod_dict() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.write_mod_dict"]], "write_obj_dict() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.write_obj_dict"]], "test_cases": [[7, "module-test_cases"]], "test_cases.base_case": [[8, "module-test_cases.base_case"]], "test_cases.battery": [[9, "module-test_cases.battery"]], "load_base_glm() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.load_base_glm"]], "replace_load_w_meter() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.replace_load_w_meter"]], "replace_load_w_meter_old() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.replace_load_w_meter_old"]], "test_cases.battery.feeder_population": [[10, "module-test_cases.battery.feeder_population"]], "test_cases.battery.feeder_population.glm_mod_functions": [[10, "module-test_cases.battery.feeder_population.glm_mod_functions"]], "write_base_glm() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.write_base_glm"]], "write_class_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.write_class_dict"]], "write_clock_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.write_clock_dict"]], "write_filter_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.write_filter_dict"]], "write_mod_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.write_mod_dict"]], "write_obj_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.write_obj_dict"]]}})