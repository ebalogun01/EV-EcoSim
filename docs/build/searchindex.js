Search.setIndex({"docnames": ["README", "analysis", "charging_sim", "feeder_population", "index", "modules", "readme", "test_cases", "test_cases.base_case", "test_cases.battery", "test_cases.battery.feeder_population"], "filenames": ["README.md", "analysis.rst", "charging_sim.rst", "feeder_population.rst", "index.rst", "modules.rst", "readme.rst", "test_cases.rst", "test_cases.base_case.rst", "test_cases.battery.rst", "test_cases.battery.feeder_population.rst"], "titles": ["EV-Ecosim platform", "Post-simulation analysis", "Charging simulator", "Feeder population", "Welcome to EV-Ecosim 1.0.0", "Packages", "Readme", "Test cases", "test_cases.base_case package", "test_cases.battery package", "test_cases.battery.feeder_population package"], "terms": {"A": [0, 1, 2], "grid": [0, 1, 4], "awar": [0, 4], "design": [0, 2], "vehicl": 0, "paper": [0, 2], "http": [0, 1, 2], "doi": 0, "org": 0, "10": 0, "36227": 0, "techrxiv": 0, "23596725": 0, "v2": 0, "emmanuel": 0, "balogun": 0, "ebalogun": 0, "stanford": 0, "edu": 0, "lili": 0, "buechler": 0, "ebuech": 0, "gismo": 0, "slac": 0, "gridlab": [0, 3, 4, 10], "d": [0, 3, 4, 10], "instal": [0, 2], "master": 0, "branch": 0, "github": [0, 4], "com": [0, 2], "arra": 0, "energi": [0, 2], "gridlabd": 0, "version": [0, 2, 4], "python": [0, 4], "recommend": 0, "aw": 0, "ec2": 0, "hipa": 0, "ami": 0, "beauharnoi": 0, "x": 0, "ambient": 0, "_": 0, "data": [0, 1, 2], "temperatur": [0, 2], "captur": 0, "effect": 0, "environment": 0, "condit": 0, "subsystem": 0, "transform": [0, 1, 2], "base": [0, 1, 2, 4, 10], "load": [0, 1, 2, 3, 10], "includ": [0, 1, 2, 4], "exist": 0, "build": [0, 1, 2], "home": [0, 2], "usual": 0, "uncontrol": 0, "within": [0, 1, 2], "distribut": [0, 1, 4], "work": [0, 2], "proprietari": 0, "pecan": 0, "street": 0, "below": 0, "an": [0, 2], "exmapl": 0, "prototyp": 0, "note": [0, 2], "column": 0, "field": 0, "ar": [0, 1, 2], "sensit": 0, "The": [0, 1, 2, 4], "origin": 0, "ha": 0, "minut": 0, "resolut": [0, 2], "power": [0, 1, 2, 3, 4, 10], "system": [0, 1, 2, 3, 4, 10], "batt": [0, 2], "sy": 0, "identif": 0, "class": [0, 1, 2, 3, 10], "gener": [0, 2], "paramet": [0, 1, 2, 3, 10], "from": [0, 1, 2, 3], "experiment": 0, "leverag": 0, "genet": 0, "algorithm": 0, "model": [0, 2, 3, 4, 10], "2nd": 0, "order": 0, "rc": 0, "equival": 0, "circuit": 0, "ecm": 0, "One": 0, "can": [0, 1, 2], "custom": 0, "nmc": [0, 2], "upload": 0, "csv": [0, 2], "file": [0, 1, 2, 3, 10], "param": [0, 2], "shown": [0, 4], "save": [0, 1, 2], "new": [0, 2], "addit": 0, "correct": [0, 2], "open": 0, "voltag": [0, 1], "ocv": 0, "valu": [0, 1, 2], "label": [0, 1], "ocv_corr": 0, "abov": 0, "onc": [0, 2], "thei": 0, "battery_data": 0, "config": [0, 2], "json": [0, 2], "modifi": [0, 2, 3, 10], "so": 0, "sim": [0, 5, 7], "contain": [0, 1, 2, 4, 10], "which": [0, 1, 2], "configur": [0, 2], "all": [0, 1, 2, 3], "relev": 0, "implement": [0, 1, 2], "physic": 0, "legaci": 0, "forecast": 0, "develop": [0, 4], "need": [0, 2], "elec": 0, "rate": [0, 2], "time": [0, 2], "tou": [0, 2], "input": [0, 2], "user": [0, 2], "must": [0, 2], "normal": [0, 1], "full": 0, "year": [0, 2], "size": 0, "365": 0, "dai": [0, 1, 2], "avoid": 0, "ani": 0, "error": 0, "format": 0, "read": 0, "sampl": [0, 2], "dure": [0, 2], "should": 0, "one": [0, 2], "15": [0, 2], "also": [0, 1, 2], "help": 0, "downscal": [0, 2, 5], "much": 0, "coarser": 0, "librari": 0, "ieee": [0, 1], "test": [0, 2, 4, 5], "pnnl": 0, "taxonomi": 0, "glm": [0, 3, 10], "have": [0, 4], "spot": 0, "specifi": 0, "primari": 0, "level": [0, 1], "secondari": 0, "popul": [0, 4, 5], "script": 0, "vari": 0, "resourc": [0, 1], "necessari": 0, "txt": 0, "residenti": 0, "repo": 0, "limit": [0, 2], "access": [0, 4], "irradi": [0, 2], "overal": [0, 1, 2], "default": [0, 2], "nation": 0, "radiat": 0, "databas": 0, "nsrdb": 0, "san": 0, "francisco": 0, "bai": 0, "area": [0, 2], "renew": 0, "laboratori": 0, "nrel": [0, 1], "month": [0, 2], "index": [0, 2, 4], "1": [0, 2], "12": [0, 1, 2], "inclus": 0, "januari": 0, "decemb": [0, 2], "hourli": 0, "interv": 0, "oversampl": 0, "4": 0, "dataset": [0, 2], "ghi": [0, 2], "repres": 0, "global": [0, 2], "horizont": [0, 2], "w": 0, "m": 0, "2": 0, "total": [0, 2], "amount": [0, 1], "shortwav": 0, "receiv": 0, "surfac": 0, "ground": 0, "base_cas": [0, 5, 7], "write": [0, 3, 10], "inject": 0, "each": [0, 1, 2], "timestep": 0, "rlsf": 0, "plu": 0, "recurs": 0, "least": 0, "squar": 0, "filter": [0, 3, 10], "estim": [0, 1, 2, 4], "network": [0, 1, 4], "onlin": 0, "thermal": 0, "integr": [0, 4], "plot": [0, 1], "result": [0, 1], "calcul": [0, 1, 2], "impact": [0, 4], "plot_result": [0, 5], "pars": 0, "percentag": 0, "violat": [0, 1], "per": 0, "ansi": 0, "c84": 0, "variabl": [0, 2], "string": [0, 2], "path": [0, 2], "where": [0, 2], "powerflow": 0, "output": [0, 2, 3], "node": [0, 1], "load_post_opt_cost": [0, 5], "tabl": 0, "matric": 0, "respect": 0, "cost_analysi": [0, 5], "costestim": [0, 1, 5], "differ": [0, 1], "compon": [0, 1], "creat": [0, 1], "environ": 0, "conda": 0, "env": 0, "name": [0, 2], "your": [0, 2], "f": 0, "yml": 0, "OR": 0, "packag": [0, 4, 7], "list": [0, 1, 2, 3], "manual": 0, "ensur": 0, "follow": [0, 2], "method": [0, 2], "For": 0, "navig": 0, "set": [0, 2], "prepar": 0, "confirm": 0, "successfulli": 0, "ieee123_secondari": 0, "ieee123_popul": 0, "you": 0, "done": 0, "initi": [0, 2], "pre": [0, 2], "prep": 0, "now": [0, 2], "out": 0, "scenario": [0, 1, 5, 7], "python3": 0, "ev50_cosimul": 0, "master_sim": [0, 5, 7], "pleas": 0, "see": 0, "section": 0, "more": [0, 2], "detail": 0, "thi": [1, 2, 4], "cost": [1, 2], "der": 1, "num_dai": 1, "sourc": [1, 2, 3, 10], "object": [1, 2, 3, 10], "i": [1, 2, 4], "us": [1, 2, 4], "asset": 1, "ev": 1, "ecosim": 1, "number": [1, 2], "run": [1, 2, 4, 5], "calculate_battery_cost": [1, 5], "result_dir": 1, "batteri": [1, 4, 5, 7], "updat": [1, 2], "lcoe": 1, "directori": 1, "dictionari": [1, 2, 3, 10], "return": [1, 2, 3, 10], "dict": [1, 2, 3], "result_dict": 1, "calculate_electricity_cost_pgebev2": [1, 5], "pge_separate_fil": 1, "true": [1, 2], "electr": [1, 2], "pgebev2": 1, "given": [1, 2], "str": [1, 2], "compris": 1, "dollar": 1, "calculate_solar_cost": [1, 5], "pull": 1, "solar": [1, 4, 5], "ref": 1, "www": [1, 2], "gov": 1, "market": 1, "research": 1, "html": 1, "To": 1, "deprec": [1, 2], "soon": 1, "none": [1, 2], "calculate_trans_loss_of_lif": [1, 5], "expect": 1, "loss": 1, "life": 1, "refer": 1, "5": 1, "11": 1, "3": [1, 4], "std": 1, "c57": 1, "00": 1, "2010": 1, "minimum": 1, "insul": 1, "180": 1, "000": 1, "hour": [1, 2], "static": [1, 2], "plot_load": [1, 5], "total_load": 1, "net_load": 1, "prefix": [1, 2], "overlai": 1, "net": 1, "visual": 1, "demand": [1, 2], "control": [1, 5], "minu": 1, "buffer": 1, "legend": 1, "curv": 1, "plot_pow": [1, 5], "power_pr": 1, "predict": 1, "plot_soc": [1, 5], "soc": 1, "soc_pr": 1, "state": 1, "charg": [1, 4, 5], "solar_cost": [1, 5], "capit": 1, "Not": 1, "fulli": 1, "locat": [1, 2], "pv": 1, "transformer_cost": [1, 2, 5], "cannot": 1, "find": 1, "good": 1, "yet": [1, 2], "ag": [1, 2], "batteryag": [2, 5], "enact": 2, "capac": 2, "resist": 2, "step": 2, "datetim": 2, "num_step": 2, "re": 2, "current": 2, "linimncoo2": 2, "cell": 2, "ad": 2, "futur": 2, "link": [2, 4], "sciencedirect": 2, "scienc": 2, "articl": 2, "pii": 2, "s0378775314001876": 2, "beta_cap": 2, "fade": 2, "factor": 2, "cycl": 2, "alpha_cap": 2, "calendar": 2, "beta_r": 2, "growth": 2, "alpha_r": 2, "assumpt": 2, "homogen": 2, "dynam": 2, "uniform": 2, "across": 2, "constant": 2, "profil": 2, "vicin": 2, "lfp_cal_ag": [2, 5], "lfp_cyc_ag": [2, 5], "nmc_cal_ag": [2, 5], "nmc_cyc_ag": [2, 5], "get_aging_valu": [2, 5], "pack": 2, "get_calendar_ag": [2, 5], "tupl": 2, "due": 2, "get_cyc_ag": [2, 5], "THe": 2, "get_total_ag": [2, 5], "both": 2, "update_capac": [2, 5], "adopt": 2, "schmalsteig": 2, "et": 2, "al": 2, "update_resist": [2, 5], "host": 2, "price": 2, "structur": [2, 3, 10], "desir": 2, "problem": 2, "pge_bev2_": [2, 5], "valid": 2, "california": 2, "howev": 2, "own": 2, "numpi": 2, "arrai": 2, "priceload": [2, 5], "path_prefix": 2, "evs": 2, "profit": 2, "loader": 2, "obtain": 2, "first": 2, "repositori": 2, "input_r": 2, "output_r": 2, "finer": 2, "similar": 2, "panda": 2, "typic": 2, "onli": 2, "get_pric": [2, 5], "start_idx": 2, "7": 2, "assum": 2, "do": 2, "chang": 2, "int": 2, "start": 2, "vector": 2, "cardin": 2, "being": 2, "exampl": 2, "jan": 2, "ndarrai": 2, "price_vector": 2, "set_month_data": [2, 5], "main": [2, 5], "solv": 2, "objective_typ": 2, "power_demand": 2, "time_r": 2, "0": 2, "solver": [2, 4], "gurobi": 2, "constructor": 2, "function": [2, 3, 10], "degrad": 2, "convex": 2, "mix": 2, "integ": 2, "program": 2, "depend": 2, "select": 2, "separ": 2, "": 2, "pc": 2, "success": 2, "type": 2, "cvxpy": 2, "station": [2, 4], "option": 2, "counter": 2, "identifi": 2, "avail": [2, 4], "backend": 2, "invok": 2, "eco": 2, "mosek": 2, "etc": 2, "add_demand_charg": [2, 5], "kw": 2, "aggregate_constraint": [2, 5], "aggreg": 2, "constraint": 2, "build_battery_cost": [2, 5], "build_emissions_cost": [2, 5], "emiss": 2, "build_transformer_cost": [2, 5], "get_battery_constraint": [2, 5], "get_constraint": [2, 5], "instanc": [2, 3], "float": 2, "site": 2, "namepl": 2, "its": 2, "It": [2, 4], "equat": 2, "p_": 2, "min": 2, "eta": 2, "effici": 2, "panel": 2, "right": 2, "make": 2, "decis": 2, "flow": [2, 4], "devic": 2, "get_pow": [2, 5], "desired_shap": 2, "96": 2, "get_solar_output": [2, 5], "modify_r": [2, 5], "new_r": 2, "update_histori": [2, 5], "mainli": 2, "purpos": 2, "mayb": 2, "store": 2, "schedul": 2, "pge": 2, "doc": 2, "found": 2, "here": 2, "add_power_profile_to_object": [2, 5], "battery_power_profil": 2, "build_cost_pge_bev2": [2, 5], "energy_prices_t": 2, "penalize_max_pow": 2, "max_power_pen": 2, "1000": 2, "heurist": 2, "take": 2, "averag": 2, "conserv": 2, "gamma": 2, "build_electricity_cost": [2, 5], "demand_charg": 2, "fals": 2, "opt": 2, "build_object": [2, 5], "mode": 2, "electricity_cost": 2, "battery_degradation_cost": 2, "we": [2, 4], "minim": 2, "load_pric": [2, 5], "time_interv": 2, "simul": [3, 4, 5, 10], "load_base_glm": [3, 5, 9, 10], "base_file_dir": [3, 10], "base_glm_fil": [3, 10], "replace_load_w_met": [3, 5, 9, 10], "glm_dict": [3, 10], "match_str": [3, 10], "rep_str": [3, 10], "obj_typ": [3, 10], "replac": [3, 10], "meter": [3, 10], "replace_load_w_meter_old": [3, 5, 9, 10], "write_base_glm": [3, 5, 9, 10], "globals_list": [3, 10], "include_list": [3, 10], "out_dir": [3, 10], "file_nam": [3, 10], "sync_list": [3, 10], "write_class_dict": [3, 5, 9, 10], "gld_dict": [3, 10], "class_nam": [3, 10], "correspond": [3, 10], "gld": [3, 10], "write_clock_dict": [3, 5, 9, 10], "clock": [3, 10], "write_filter_dict": [3, 5, 9, 10], "write_mod_dict": [3, 5, 9, 10], "mod_nam": [3, 10], "write_obj_dict": [3, 5, 9, 10], "dict_kei": [3, 10], "co": 4, "platform": 4, "interfac": 4, "phase": 4, "unbalanc": 4, "fast": 4, "made": 4, "web": 4, "tool": 4, "public": 4, "most": 4, "code": 4, "document": 4, "project": 4, "via": 4, "still": 4, "under": 4, "activ": 4, "improv": 4, "todo": 4, "tutori": 4, "inform": 4, "readm": 4, "post": [4, 5], "analysi": [4, 5], "feeder": [4, 5], "case": [4, 5], "modul": [4, 5], "search": 4, "page": 4, "submodul": [5, 7], "content": 5, "charging_sim": 5, "batteryagingsim": 5, "batterypack": 5, "batterytest": 5, "capacitor": 5, "chargingst": 5, "electricitypric": 5, "optim": 5, "orchestr": 5, "util": 5, "feeder_popul": [5, 7, 9], "glm_mod_funct": [5, 7, 9], "subpackag": 5, "test_cas": [5, 7], "event_handl": [5, 7], "gblvar": [5, 7], "glmptime": [5, 7], "voltdump2": [5, 7], "data_analysi": [5, 7], "event_handlers_oneshot": [5, 7], "parse_voltag": [5, 7], "feeder_population_old": [7, 9]}, "objects": {"": [[1, 0, 0, "-", "analysis"], [2, 0, 0, "-", "charging_sim"], [3, 0, 0, "-", "feeder_population"], [7, 0, 0, "-", "test_cases"]], "analysis": [[1, 0, 0, "-", "cost_analysis"]], "analysis.cost_analysis": [[1, 1, 1, "", "CostEstimator"]], "analysis.cost_analysis.CostEstimator": [[1, 2, 1, "", "calculate_battery_cost"], [1, 2, 1, "", "calculate_electricity_cost_PGEBEV2s"], [1, 2, 1, "", "calculate_solar_cost"], [1, 2, 1, "", "calculate_trans_loss_of_life"], [1, 2, 1, "", "plot_loads"], [1, 2, 1, "", "plot_power"], [1, 2, 1, "", "plot_soc"], [1, 2, 1, "", "solar_cost"], [1, 2, 1, "", "transformer_cost"]], "charging_sim": [[2, 0, 0, "-", "batteryAgingSim"], [2, 0, 0, "-", "capacitor"], [2, 0, 0, "-", "electricityPrices"], [2, 0, 0, "-", "optimization"], [2, 0, 0, "-", "solar"], [2, 0, 0, "-", "utils"]], "charging_sim.batteryAgingSim": [[2, 1, 1, "", "BatteryAging"]], "charging_sim.batteryAgingSim.BatteryAging": [[2, 2, 1, "", "LFP_cal_aging"], [2, 2, 1, "", "LFP_cyc_aging"], [2, 2, 1, "", "NMC_cal_aging"], [2, 2, 1, "", "NMC_cyc_aging"], [2, 2, 1, "", "get_aging_value"], [2, 2, 1, "", "get_calendar_aging"], [2, 2, 1, "", "get_cyc_aging"], [2, 2, 1, "", "get_total_aging"], [2, 2, 1, "", "run"], [2, 2, 1, "", "update_capacity"], [2, 2, 1, "", "update_resistance"]], "charging_sim.capacitor": [[2, 1, 1, "", "Capacitor"]], "charging_sim.electricityPrices": [[2, 1, 1, "", "PriceLoader"], [2, 3, 1, "", "main"]], "charging_sim.electricityPrices.PriceLoader": [[2, 2, 1, "", "downscale"], [2, 2, 1, "", "get_prices"], [2, 2, 1, "", "set_month_data"]], "charging_sim.optimization": [[2, 1, 1, "", "Optimization"]], "charging_sim.optimization.Optimization": [[2, 2, 1, "", "add_demand_charge"], [2, 2, 1, "", "aggregate_constraints"], [2, 2, 1, "", "build_battery_cost"], [2, 2, 1, "", "build_emissions_cost"], [2, 2, 1, "", "build_transformer_cost"], [2, 2, 1, "", "get_battery_constraint"], [2, 2, 1, "", "get_constraints"], [2, 2, 1, "", "run"]], "charging_sim.solar": [[2, 1, 1, "", "Solar"], [2, 3, 1, "", "main"]], "charging_sim.solar.Solar": [[2, 2, 1, "", "downscale"], [2, 2, 1, "", "get_constraints"], [2, 2, 1, "", "get_power"], [2, 2, 1, "", "get_solar_output"], [2, 2, 1, "", "modify_res"], [2, 2, 1, "", "update_history"]], "charging_sim.utils": [[2, 3, 1, "", "PGE_BEV2_S"], [2, 3, 1, "", "add_power_profile_to_object"], [2, 3, 1, "", "build_cost_PGE_BEV2S"], [2, 3, 1, "", "build_electricity_cost"], [2, 3, 1, "", "build_objective"], [2, 3, 1, "", "load_prices"]], "feeder_population": [[3, 0, 0, "-", "glm_mod_functions"]], "feeder_population.glm_mod_functions": [[3, 3, 1, "", "load_base_glm"], [3, 3, 1, "", "replace_load_w_meter"], [3, 3, 1, "", "replace_load_w_meter_old"], [3, 3, 1, "", "write_base_glm"], [3, 3, 1, "", "write_class_dict"], [3, 3, 1, "", "write_clock_dict"], [3, 3, 1, "", "write_filter_dict"], [3, 3, 1, "", "write_mod_dict"], [3, 3, 1, "", "write_obj_dict"]], "test_cases": [[8, 0, 0, "-", "base_case"], [9, 0, 0, "-", "battery"]], "test_cases.battery": [[10, 0, 0, "-", "feeder_population"]], "test_cases.battery.feeder_population": [[10, 0, 0, "-", "glm_mod_functions"]], "test_cases.battery.feeder_population.glm_mod_functions": [[10, 3, 1, "", "load_base_glm"], [10, 3, 1, "", "replace_load_w_meter"], [10, 3, 1, "", "replace_load_w_meter_old"], [10, 3, 1, "", "write_base_glm"], [10, 3, 1, "", "write_class_dict"], [10, 3, 1, "", "write_clock_dict"], [10, 3, 1, "", "write_filter_dict"], [10, 3, 1, "", "write_mod_dict"], [10, 3, 1, "", "write_obj_dict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"ev": [0, 4], "ecosim": [0, 4], "platform": 0, "author": 0, "requir": 0, "folder": 0, "descript": 0, "ambient_data": 0, "base_load_data": 0, "batt_sys_identif": 0, "charging_sim": [0, 2], "batteri": [0, 2, 9, 10], "py": 0, "cell": 0, "modul": [0, 1, 2, 3, 7, 8, 9, 10], "batterypack": [0, 2], "pack": 0, "batteryagingsim": [0, 2], "ag": 0, "control": [0, 2], "chargingst": [0, 2], "charg": [0, 2], "station": 0, "electricitypric": [0, 2], "electr": 0, "price": 0, "optim": [0, 2], "orchestr": [0, 2], "simul": [0, 1, 2], "solar": [0, 2], "pv": 0, "util": [0, 2], "host": 0, "function": 0, "us": 0, "some": 0, "offlin": 0, "der": 0, "cost": 0, "minim": 0, "thi": 0, "i": 0, "run": 0, "mode": 0, "state": 0, "feedback": 0, "dlmodel": 0, "elec_r": 0, "feeder": [0, 3], "feeder_popul": [0, 3, 10], "solar_data": 0, "test_cas": [0, 8, 9, 10], "co": 0, "case": [0, 7], "analysi": [0, 1], "how": 0, "post": [0, 1], "submodul": [1, 2, 3, 8, 9, 10], "cost_analysi": 1, "load_post_opt_cost": 1, "plot_result": 1, "content": [1, 2, 3, 4, 7, 8, 9, 10], "batterytest": 2, "capacitor": 2, "popul": 3, "glm_mod_funct": [3, 10], "welcom": 4, "1": 4, "0": 4, "indic": 4, "tabl": 4, "packag": [5, 8, 9, 10], "readm": 6, "test": 7, "subpackag": [7, 9], "base_cas": 8, "event_handl": [8, 9], "gblvar": [8, 9], "glmptime": [8, 9], "master_sim": [8, 9], "sim": [8, 9], "voltdump2": [8, 9], "data_analysi": 9, "event_handlers_oneshot": 9, "parse_voltag": 9, "scenario": 9, "feeder_population_old": 10}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"EV-Ecosim platform": [[0, "ev-ecosim-platform"]], "Authors": [[0, "authors"]], "Requirements": [[0, "requirements"]], "Folder descriptions": [[0, "folder-descriptions"]], "ambient_data": [[0, "ambient-data"]], "base_load_data": [[0, "base-load-data"]], "batt_sys_identification": [[0, "batt-sys-identification"]], "charging_sim": [[0, "charging-sim"]], "battery.py - Battery cell module.": [[0, "battery-py-battery-cell-module"]], "batterypack.py - Battery pack module.": [[0, "batterypack-py-battery-pack-module"]], "batteryAgingSim.py - Battery aging module.": [[0, "batteryagingsim-py-battery-aging-module"]], "controller.py - Controller module.": [[0, "controller-py-controller-module"]], "chargingStation.py - Charging station module.": [[0, "chargingstation-py-charging-station-module"]], "electricityPrices.py - Electricity prices module.": [[0, "electricityprices-py-electricity-prices-module"]], "optimization.py - Optimization module.": [[0, "optimization-py-optimization-module"]], "orchestrator.py - Simulation orchestrator module.": [[0, "orchestrator-py-simulation-orchestrator-module"]], "solar.py - Solar PV module.": [[0, "solar-py-solar-pv-module"]], "utils.py - Hosts utility functions used by some modules.": [[0, "utils-py-hosts-utility-functions-used-by-some-modules"]], "simulate.py - Offline DER control optimization for cost minimization (this is run for offline mode (no state feedback)).": [[0, "simulate-py-offline-der-control-optimization-for-cost-minimization-this-is-run-for-offline-mode-no-state-feedback"]], "DLMODELS": [[0, "dlmodels"]], "elec_rates": [[0, "elec-rates"]], "feeders": [[0, "feeders"]], "feeder_population": [[0, "feeder-population"]], "solar_data": [[0, "solar-data"]], "test_cases": [[0, "test-cases"]], "Co-simulation cases.": [[0, "co-simulation-cases"]], "analysis": [[0, "analysis"]], "How to run": [[0, "how-to-run"]], "Post-simulation analysis": [[0, "post-simulation-analysis"], [1, "post-simulation-analysis"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"]], "cost_analysis module": [[1, "module-analysis.cost_analysis"]], "load_post_opt_costs module": [[1, "load-post-opt-costs-module"]], "plot_results module": [[1, "plot-results-module"]], "Module contents": [[1, "module-analysis"], [2, "module-charging_sim"], [3, "module-feeder_population"], [7, "module-test_cases"], [8, "module-test_cases.base_case"], [9, "module-test_cases.battery"], [10, "module-test_cases.battery.feeder_population"]], "Charging simulator": [[2, "charging-simulator"]], "charging_sim.battery module": [[2, "charging-sim-battery-module"]], "charging_sim.batteryAgingSim module": [[2, "module-charging_sim.batteryAgingSim"]], "charging_sim.batterypack module": [[2, "charging-sim-batterypack-module"]], "charging_sim.batterytest module": [[2, "charging-sim-batterytest-module"]], "charging_sim.capacitor module": [[2, "module-charging_sim.capacitor"]], "charging_sim.chargingStation module": [[2, "charging-sim-chargingstation-module"]], "charging_sim.controller module": [[2, "charging-sim-controller-module"]], "charging_sim.electricityPrices module": [[2, "module-charging_sim.electricityPrices"]], "charging_sim.optimization module": [[2, "module-charging_sim.optimization"]], "charging_sim.orchestrator module": [[2, "charging-sim-orchestrator-module"]], "charging_sim.simulate module": [[2, "charging-sim-simulate-module"]], "charging_sim.solar module": [[2, "module-charging_sim.solar"]], "charging_sim.utils module": [[2, "module-charging_sim.utils"]], "Feeder population": [[3, "feeder-population"]], "feeder_population.feeder_population module": [[3, "feeder-population-feeder-population-module"]], "feeder_population.glm_mod_functions module": [[3, "module-feeder_population.glm_mod_functions"]], "Welcome to EV-Ecosim 1.0.0": [[4, "welcome-to-ev-ecosim-1-0-0"]], "Contents:": [[4, null]], "Indices and tables": [[4, "indices-and-tables"]], "Packages": [[5, "packages"]], "Readme": [[6, "readme"]], "Test cases": [[7, "test-cases"]], "Subpackages": [[7, "subpackages"], [9, "subpackages"]], "test_cases.base_case package": [[8, "test-cases-base-case-package"]], "test_cases.base_case.event_handlers module": [[8, "test-cases-base-case-event-handlers-module"]], "test_cases.base_case.gblvar module": [[8, "test-cases-base-case-gblvar-module"]], "test_cases.base_case.glmptime module": [[8, "test-cases-base-case-glmptime-module"]], "test_cases.base_case.master_sim module": [[8, "test-cases-base-case-master-sim-module"]], "test_cases.base_case.sim module": [[8, "test-cases-base-case-sim-module"]], "test_cases.base_case.voltdump2 module": [[8, "test-cases-base-case-voltdump2-module"]], "test_cases.battery package": [[9, "test-cases-battery-package"]], "test_cases.battery.data_analysis module": [[9, "test-cases-battery-data-analysis-module"]], "test_cases.battery.event_handlers module": [[9, "test-cases-battery-event-handlers-module"]], "test_cases.battery.event_handlers_oneshot module": [[9, "test-cases-battery-event-handlers-oneshot-module"]], "test_cases.battery.gblvar module": [[9, "test-cases-battery-gblvar-module"]], "test_cases.battery.glmptime module": [[9, "test-cases-battery-glmptime-module"]], "test_cases.battery.master_sim module": [[9, "test-cases-battery-master-sim-module"]], "test_cases.battery.parse_voltages module": [[9, "test-cases-battery-parse-voltages-module"]], "test_cases.battery.scenarios module": [[9, "test-cases-battery-scenarios-module"]], "test_cases.battery.sim module": [[9, "test-cases-battery-sim-module"]], "test_cases.battery.voltdump2 module": [[9, "test-cases-battery-voltdump2-module"]], "test_cases.battery.feeder_population package": [[10, "test-cases-battery-feeder-population-package"]], "test_cases.battery.feeder_population.feeder_population module": [[10, "test-cases-battery-feeder-population-feeder-population-module"]], "test_cases.battery.feeder_population.feeder_population_old module": [[10, "test-cases-battery-feeder-population-feeder-population-old-module"]], "test_cases.battery.feeder_population.glm_mod_functions module": [[10, "module-test_cases.battery.feeder_population.glm_mod_functions"]]}, "indexentries": {"costestimator (class in analysis.cost_analysis)": [[1, "analysis.cost_analysis.CostEstimator"]], "analysis": [[1, "module-analysis"]], "analysis.cost_analysis": [[1, "module-analysis.cost_analysis"]], "calculate_battery_cost() (analysis.cost_analysis.costestimator method)": [[1, "analysis.cost_analysis.CostEstimator.calculate_battery_cost"]], "calculate_electricity_cost_pgebev2s() (analysis.cost_analysis.costestimator method)": [[1, "analysis.cost_analysis.CostEstimator.calculate_electricity_cost_PGEBEV2s"]], "calculate_solar_cost() (analysis.cost_analysis.costestimator method)": [[1, "analysis.cost_analysis.CostEstimator.calculate_solar_cost"]], "calculate_trans_loss_of_life() (analysis.cost_analysis.costestimator method)": [[1, "analysis.cost_analysis.CostEstimator.calculate_trans_loss_of_life"]], "module": [[1, "module-analysis"], [1, "module-analysis.cost_analysis"], [2, "module-charging_sim"], [2, "module-charging_sim.batteryAgingSim"], [2, "module-charging_sim.capacitor"], [2, "module-charging_sim.electricityPrices"], [2, "module-charging_sim.optimization"], [2, "module-charging_sim.solar"], [2, "module-charging_sim.utils"], [3, "module-feeder_population"], [3, "module-feeder_population.glm_mod_functions"], [7, "module-test_cases"], [8, "module-test_cases.base_case"], [9, "module-test_cases.battery"], [10, "module-test_cases.battery.feeder_population"], [10, "module-test_cases.battery.feeder_population.glm_mod_functions"]], "plot_loads() (analysis.cost_analysis.costestimator static method)": [[1, "analysis.cost_analysis.CostEstimator.plot_loads"]], "plot_power() (analysis.cost_analysis.costestimator static method)": [[1, "analysis.cost_analysis.CostEstimator.plot_power"]], "plot_soc() (analysis.cost_analysis.costestimator static method)": [[1, "analysis.cost_analysis.CostEstimator.plot_soc"]], "solar_cost() (analysis.cost_analysis.costestimator method)": [[1, "analysis.cost_analysis.CostEstimator.solar_cost"]], "transformer_cost() (analysis.cost_analysis.costestimator method)": [[1, "analysis.cost_analysis.CostEstimator.transformer_cost"]], "batteryaging (class in charging_sim.batteryagingsim)": [[2, "charging_sim.batteryAgingSim.BatteryAging"]], "capacitor (class in charging_sim.capacitor)": [[2, "charging_sim.capacitor.Capacitor"]], "lfp_cal_aging() (charging_sim.batteryagingsim.batteryaging static method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.LFP_cal_aging"]], "lfp_cyc_aging() (charging_sim.batteryagingsim.batteryaging static method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.LFP_cyc_aging"]], "nmc_cal_aging() (charging_sim.batteryagingsim.batteryaging static method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.NMC_cal_aging"]], "nmc_cyc_aging() (charging_sim.batteryagingsim.batteryaging static method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.NMC_cyc_aging"]], "optimization (class in charging_sim.optimization)": [[2, "charging_sim.optimization.Optimization"]], "pge_bev2_s() (in module charging_sim.utils)": [[2, "charging_sim.utils.PGE_BEV2_S"]], "priceloader (class in charging_sim.electricityprices)": [[2, "charging_sim.electricityPrices.PriceLoader"]], "solar (class in charging_sim.solar)": [[2, "charging_sim.solar.Solar"]], "add_demand_charge() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.add_demand_charge"]], "add_power_profile_to_object() (in module charging_sim.utils)": [[2, "charging_sim.utils.add_power_profile_to_object"]], "aggregate_constraints() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.aggregate_constraints"]], "build_battery_cost() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.build_battery_cost"]], "build_cost_pge_bev2s() (in module charging_sim.utils)": [[2, "charging_sim.utils.build_cost_PGE_BEV2S"]], "build_electricity_cost() (in module charging_sim.utils)": [[2, "charging_sim.utils.build_electricity_cost"]], "build_emissions_cost() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.build_emissions_cost"]], "build_objective() (in module charging_sim.utils)": [[2, "charging_sim.utils.build_objective"]], "build_transformer_cost() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.build_transformer_cost"]], "charging_sim": [[2, "module-charging_sim"]], "charging_sim.batteryagingsim": [[2, "module-charging_sim.batteryAgingSim"]], "charging_sim.capacitor": [[2, "module-charging_sim.capacitor"]], "charging_sim.electricityprices": [[2, "module-charging_sim.electricityPrices"]], "charging_sim.optimization": [[2, "module-charging_sim.optimization"]], "charging_sim.solar": [[2, "module-charging_sim.solar"]], "charging_sim.utils": [[2, "module-charging_sim.utils"]], "downscale() (charging_sim.electricityprices.priceloader method)": [[2, "charging_sim.electricityPrices.PriceLoader.downscale"]], "downscale() (charging_sim.solar.solar method)": [[2, "charging_sim.solar.Solar.downscale"]], "get_aging_value() (charging_sim.batteryagingsim.batteryaging method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.get_aging_value"]], "get_battery_constraint() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.get_battery_constraint"]], "get_calendar_aging() (charging_sim.batteryagingsim.batteryaging method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.get_calendar_aging"]], "get_constraints() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.get_constraints"]], "get_constraints() (charging_sim.solar.solar method)": [[2, "charging_sim.solar.Solar.get_constraints"]], "get_cyc_aging() (charging_sim.batteryagingsim.batteryaging method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.get_cyc_aging"]], "get_power() (charging_sim.solar.solar method)": [[2, "charging_sim.solar.Solar.get_power"]], "get_prices() (charging_sim.electricityprices.priceloader method)": [[2, "charging_sim.electricityPrices.PriceLoader.get_prices"]], "get_solar_output() (charging_sim.solar.solar method)": [[2, "charging_sim.solar.Solar.get_solar_output"]], "get_total_aging() (charging_sim.batteryagingsim.batteryaging method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.get_total_aging"]], "load_prices() (in module charging_sim.utils)": [[2, "charging_sim.utils.load_prices"]], "main() (in module charging_sim.electricityprices)": [[2, "charging_sim.electricityPrices.main"]], "main() (in module charging_sim.solar)": [[2, "charging_sim.solar.main"]], "modify_res() (charging_sim.solar.solar method)": [[2, "charging_sim.solar.Solar.modify_res"]], "run() (charging_sim.batteryagingsim.batteryaging method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.run"]], "run() (charging_sim.optimization.optimization method)": [[2, "charging_sim.optimization.Optimization.run"]], "set_month_data() (charging_sim.electricityprices.priceloader method)": [[2, "charging_sim.electricityPrices.PriceLoader.set_month_data"]], "update_capacity() (charging_sim.batteryagingsim.batteryaging method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.update_capacity"]], "update_history() (charging_sim.solar.solar method)": [[2, "charging_sim.solar.Solar.update_history"]], "update_resistance() (charging_sim.batteryagingsim.batteryaging method)": [[2, "charging_sim.batteryAgingSim.BatteryAging.update_resistance"]], "feeder_population": [[3, "module-feeder_population"]], "feeder_population.glm_mod_functions": [[3, "module-feeder_population.glm_mod_functions"]], "load_base_glm() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.load_base_glm"]], "replace_load_w_meter() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.replace_load_w_meter"]], "replace_load_w_meter_old() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.replace_load_w_meter_old"]], "write_base_glm() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.write_base_glm"]], "write_class_dict() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.write_class_dict"]], "write_clock_dict() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.write_clock_dict"]], "write_filter_dict() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.write_filter_dict"]], "write_mod_dict() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.write_mod_dict"]], "write_obj_dict() (in module feeder_population.glm_mod_functions)": [[3, "feeder_population.glm_mod_functions.write_obj_dict"]], "test_cases": [[7, "module-test_cases"]], "test_cases.base_case": [[8, "module-test_cases.base_case"]], "test_cases.battery": [[9, "module-test_cases.battery"]], "load_base_glm() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.load_base_glm"]], "replace_load_w_meter() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.replace_load_w_meter"]], "replace_load_w_meter_old() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.replace_load_w_meter_old"]], "test_cases.battery.feeder_population": [[10, "module-test_cases.battery.feeder_population"]], "test_cases.battery.feeder_population.glm_mod_functions": [[10, "module-test_cases.battery.feeder_population.glm_mod_functions"]], "write_base_glm() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.write_base_glm"]], "write_class_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.write_class_dict"]], "write_clock_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.write_clock_dict"]], "write_filter_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.write_filter_dict"]], "write_mod_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.write_mod_dict"]], "write_obj_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[10, "test_cases.battery.feeder_population.glm_mod_functions.write_obj_dict"]]}})